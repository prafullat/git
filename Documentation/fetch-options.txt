-a::
--append::
	Append ref names and object names of fetched refs to the
	existing contents of `.git/FETCH_HEAD`.  Without this
	option old data in `.git/FETCH_HEAD` will be overwritten.

--depth=<depth>::
	Deepen the history of a 'shallow' repository created by
	`git clone` with `--depth=<depth>` option (see linkgit:git-clone[1])
	by the specified number of commits.

-f::
--force::
	When 'git-fetch' is used with `<rbranch>:<lbranch>`
	refspec, it refuses to update the local branch
	`<lbranch>` unless the remote branch `<rbranch>` it
	fetches is a descendant of `<lbranch>`.  This option
	overrides that check.

-k::
--keep::
	Keep downloaded pack.

ifdef::git-pull[]
--no-tags::
endif::git-pull[]
ifndef::git-pull[]
-n::
--no-tags::
endif::git-pull[]
	By default, tags that point at objects that are downloaded
	from the remote repository are fetched and stored locally.
	This option disables this automatic tag following.

-t::
--tags::
	Most of the tags are fetched automatically as branch
	heads are downloaded, but tags that do not point at
	objects reachable from the branch heads that are being
	tracked will not be fetched by this mechanism.  This
	flag lets all tags and their associated objects be
	downloaded.

-u::
--update-head-ok::
	By default 'git-fetch' refuses to update the head which
	corresponds to the current branch.  This flag disables the
	check.  This is purely for the internal use for 'git-pull'
	to communicate with 'git-fetch', and unless you are
	implementing your own Porcelain you are not supposed to
	use it.

--upload-pack <upload-pack>::
	When given, and the repository to fetch from is handled
	by 'git-fetch-pack', '--exec=<upload-pack>' is passed to
	the command to specify non-default path for the command
	run on the other end.

ifndef::git-pull[]
-q::
--quiet::
	Pass --quiet to git-fetch-pack and silence any other internally
	used git commands.

-M::
--use-mirror::
	Try to use a configured mirror for the bulk of the transfer
	rather than the main upstream.  See gitlink:git-config[1] for
	the appropriate options to set.
+
The preferred mirror (or the first if no preferred URL is defined) is
first contacted and fetched from, and any refs it presents which match
the source <refspec> (including the rules for fetching tags) are saved
under `refs/mirrors/`<remote>`/hostname`.  If there is a network
timeout, or the user interrupts the fetch process, the next mirror
will be tried.
+
Once the fetch from the mirror is complete, the central host is
contacted and fetched from.  If the mirror was correct and up to date,
then no more data will be required from the central host.  At this
point, all of the refs under `refs/mirrors/`<remote> which are
reachable from the real `refs/remotes/`<remote> tracking branches will
be removed.  Extra refs which were not present on the real source will
be left behind so they are not fetched again the next time around.
+
This can be made the default for a remote using the
`remote.`<remote>.`use-mirror` configuration option.

-v::
--verbose::
	Be verbose.
endif::git-pull[]
